{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<a href=\"https://cognitiveclass.ai/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkRP0101ENCoursera23911160-2022-01-01\">\n",
    "    <img src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-RP0101EN-Coursera/v2/M1_R_Basics/images/IDSNlogo.png\" width=\"200\" align=\"center\">\n",
    "</a>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Analysis of Global COVID-19 Pandemic Data</h1>\n",
    "\n",
    "Estimated time needed: **90** minutes\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Overview:\n",
    "\n",
    "There are 10 tasks in this final project. All tasks will be graded by your peers who are also completing this assignment within the same session.\n",
    "\n",
    "You need to submit the following the screenshot for the code and output for each task for review.\n",
    "\n",
    "If you need to refresh your memories about specific coding details, you may refer to previous hands-on labs for code examples.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Loading required package: httr\n",
      "Loading required package: rvest\n",
      "Loading required package: xml2\n",
      "Updating HTML index of packages in '.Library'\n",
      "Making 'packages.html' ... done\n",
      "also installing the dependencies ‘lifecycle’, ‘rlang’\n",
      "\n",
      "Updating HTML index of packages in '.Library'\n",
      "Making 'packages.html' ... done\n"
     ]
    }
   ],
   "source": [
    "require(\"httr\")\n",
    "require(\"rvest\")\n",
    "install.packages(\"httr\")\n",
    "install.packages(\"rvest\")\n",
    "library(httr)\n",
    "library(rvest)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note: if you can import above libraries, please use install.packages() to install them first.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 1: Get a `COVID-19 pandemic` Wiki page using HTTP request\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, let's write a function to use HTTP request to get a public COVID-19 Wiki page.\n",
    "\n",
    "Before you write the function, you can open this public page from this\n",
    "\n",
    "URL [https://en.wikipedia.org/w/index.php?title=Template\\:COVID-19\\_testing_by_country](https://en.wikipedia.org/w/index.php?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkRP0101ENCoursera23911160-2022-01-01&title=Template%3ACOVID-19\\_testing_by_country) using a web browser.\n",
    "\n",
    "The goal of task 1 is to get the html page using HTTP request (`httr` library)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "get_wiki_covid19_page <- function() {\n",
    "    \n",
    "  # Our target COVID-19 wiki page URL is: https://en.wikipedia.org/w/index.php?title=Template:COVID-19_testing_by_country  \n",
    "  # Which has two parts: \n",
    "    # 1) base URL `https://en.wikipedia.org/w/index.php  \n",
    "    # 2) URL parameter: `title=Template:COVID-19_testing_by_country`, seperated by question mark ?\n",
    "    \n",
    "  # Wiki page base\n",
    "wiki_base_url <- (\"https://en.wikipedia.org/w/index.php\")\n",
    "url_parameter <- (\"title=Template:COVID-19_testing_by_country\")\n",
    "  # You will need to create a List which has an element called `title` to specify which page you want to get from Wiki\n",
    "  # in our case, it will be `Template:COVID-19_testing_by_country`\n",
    "covid19_url <-paste(wiki_base_url, url_parameter, sep='?')\n",
    "  # - Use the `GET` function in httr library with a `url` argument and a `query` arugment to get a HTTP response\n",
    "    \n",
    "  # Use the `return` function to return the response\n",
    "response<- GET(covid19_url)\n",
    "return(response)\n",
    "}\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Call the `get_wiki_covid19_page` function to get a http response with the target html page\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Response [https://en.wikipedia.org/w/index.php?title=Template:COVID-19_testing_by_country]\n",
       "  Date: 2022-09-02 23:08\n",
       "  Status: 200\n",
       "  Content-Type: text/html; charset=UTF-8\n",
       "  Size: 415 kB\n",
       "<!DOCTYPE html>\n",
       "<html class=\"client-nojs\" lang=\"en\" dir=\"ltr\">\n",
       "<head>\n",
       "<meta charset=\"UTF-8\"/>\n",
       "<title>Template:COVID-19 testing by country - Wikipedia</title>\n",
       "<script>document.documentElement.className=\"client-js\";RLCONF={\"wgBreakFrames...\n",
       "\"CS1 German-language sources (de)\",\"CS1 Azerbaijani-language sources (az)\",\"C...\n",
       "\"CS1 uses Japanese-language script (ja)\",\"CS1 Japanese-language sources (ja)\"...\n",
       "\"COVID-19 pandemic templates\"],\"wgPageContentLanguage\":\"en\",\"wgPageContentMod...\n",
       "\"GEHomepageSuggestedEditsEnableTopics\":true,\"wgGETopicsMatchModeEnabled\":fals...\n",
       "..."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Call the get_wiki_covid19_page function and print the response\n",
    "get_wiki_covid19_page()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 2: Extract COVID-19 testing data table from the wiki HTML page\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On the COVID-19 testing wiki page, you should see a data table `<table>` node contains COVID-19 testing data by country on the page:\n",
    "\n",
    "<a href=\"https://cognitiveclass.ai/?utm_medium=Exinfluencer&utm_source=Exinfluencer&utm_content=000026UJ&utm_term=10006555&utm_id=NA-SkillsNetwork-Channel-SkillsNetworkCoursesIBMDeveloperSkillsNetworkRP0101ENCoursera23911160-2022-01-01\">\n",
    "    <img src=\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-RP0101EN-Coursera/v2/M5_Final/images/covid-19-by-country.png\" width=\"400\" align=\"center\">\n",
    "</a>\n",
    "\n",
    "Note the numbers you actually see on your page may be different from above because it is still an on-going pandemic when creating this notebook.\n",
    "\n",
    "The goal of task 2 is to extract above data table and convert it into a data frame\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now use the `read_html` function in rvest library to get the root html node from response\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{html_document}\n",
       "<html class=\"client-nojs\" lang=\"en\" dir=\"ltr\">\n",
       "[1] <head>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 ...\n",
       "[2] <body class=\"mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-10 ns-subject ..."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get the root html node from the http response in task 1 \n",
    "root_htmlnode <- read_html(response)\n",
    "root_htmlnode"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Get the first table in the HTML root node using `html_node` function\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{html_node}\n",
       "<table class=\"wikitable plainrowheaders sortable collapsible autocollapse\">\n",
       "[1] <caption>\\n<style data-mw-deduplicate=\"TemplateStyles:r1063604349\">.mw-pa ...\n",
       "[2] <tbody>\\n<tr>\\n<th>Country or region\\n</th>\\n<th>Date<sup id=\"cite_ref-1\" ..."
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get the table node from the root html node\n",
    "table_node <- html_node(root_htmlnode, \"table\")\n",
    "table_node"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Read the table node as a data frame using `html_table` function\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<caption>A data.frame: 6 × 9</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>Country or region</th><th scope=col>Date[a]</th><th scope=col>Tested</th><th scope=col>Units[b]</th><th scope=col>Confirmed(cases)</th><th scope=col>Confirmed /tested,%</th><th scope=col>Tested /population,%</th><th scope=col>Confirmed /population,%</th><th scope=col>Ref.</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th><th scope=col>&lt;chr&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>Afghanistan        </td><td>17 Dec 2020</td><td>154,767</td><td>samples</td><td>49,621</td><td>32.1</td><td>0.40</td><td>0.13 </td><td>[1]   </td></tr>\n",
       "\t<tr><th scope=row>2</th><td>Albania            </td><td>18 Feb 2021</td><td>428,654</td><td>samples</td><td>96,838</td><td>22.6</td><td>15.0</td><td>3.4  </td><td>[2]   </td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Algeria            </td><td>2 Nov 2020 </td><td>230,553</td><td>samples</td><td>58,574</td><td>25.4</td><td>0.53</td><td>0.13 </td><td>[3][4]</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>Andorra            </td><td>23 Feb 2022</td><td>300,307</td><td>samples</td><td>37,958</td><td>12.6</td><td>387 </td><td>49.0 </td><td>[5]   </td></tr>\n",
       "\t<tr><th scope=row>5</th><td>Angola             </td><td>2 Feb 2021 </td><td>399,228</td><td>samples</td><td>20,981</td><td>5.3 </td><td>1.3 </td><td>0.067</td><td>[6]   </td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Antigua and Barbuda</td><td>6 Mar 2021 </td><td>15,268 </td><td>samples</td><td>832   </td><td>5.4 </td><td>15.9</td><td>0.86 </td><td>[7]   </td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 6 × 9\n",
       "\\begin{tabular}{r|lllllllll}\n",
       "  & Country or region & Date{[}a{]} & Tested & Units{[}b{]} & Confirmed(cases) & Confirmed /tested,\\% & Tested /population,\\% & Confirmed /population,\\% & Ref.\\\\\n",
       "  & <chr> & <chr> & <chr> & <chr> & <chr> & <chr> & <chr> & <chr> & <chr>\\\\\n",
       "\\hline\n",
       "\t1 & Afghanistan         & 17 Dec 2020 & 154,767 & samples & 49,621 & 32.1 & 0.40 & 0.13  & {[}1{]}   \\\\\n",
       "\t2 & Albania             & 18 Feb 2021 & 428,654 & samples & 96,838 & 22.6 & 15.0 & 3.4   & {[}2{]}   \\\\\n",
       "\t3 & Algeria             & 2 Nov 2020  & 230,553 & samples & 58,574 & 25.4 & 0.53 & 0.13  & {[}3{]}{[}4{]}\\\\\n",
       "\t4 & Andorra             & 23 Feb 2022 & 300,307 & samples & 37,958 & 12.6 & 387  & 49.0  & {[}5{]}   \\\\\n",
       "\t5 & Angola              & 2 Feb 2021  & 399,228 & samples & 20,981 & 5.3  & 1.3  & 0.067 & {[}6{]}   \\\\\n",
       "\t6 & Antigua and Barbuda & 6 Mar 2021  & 15,268  & samples & 832    & 5.4  & 15.9 & 0.86  & {[}7{]}   \\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 6 × 9\n",
       "\n",
       "| <!--/--> | Country or region &lt;chr&gt; | Date[a] &lt;chr&gt; | Tested &lt;chr&gt; | Units[b] &lt;chr&gt; | Confirmed(cases) &lt;chr&gt; | Confirmed /tested,% &lt;chr&gt; | Tested /population,% &lt;chr&gt; | Confirmed /population,% &lt;chr&gt; | Ref. &lt;chr&gt; |\n",
       "|---|---|---|---|---|---|---|---|---|---|\n",
       "| 1 | Afghanistan         | 17 Dec 2020 | 154,767 | samples | 49,621 | 32.1 | 0.40 | 0.13  | [1]    |\n",
       "| 2 | Albania             | 18 Feb 2021 | 428,654 | samples | 96,838 | 22.6 | 15.0 | 3.4   | [2]    |\n",
       "| 3 | Algeria             | 2 Nov 2020  | 230,553 | samples | 58,574 | 25.4 | 0.53 | 0.13  | [3][4] |\n",
       "| 4 | Andorra             | 23 Feb 2022 | 300,307 | samples | 37,958 | 12.6 | 387  | 49.0  | [5]    |\n",
       "| 5 | Angola              | 2 Feb 2021  | 399,228 | samples | 20,981 | 5.3  | 1.3  | 0.067 | [6]    |\n",
       "| 6 | Antigua and Barbuda | 6 Mar 2021  | 15,268  | samples | 832    | 5.4  | 15.9 | 0.86  | [7]    |\n",
       "\n"
      ],
      "text/plain": [
       "  Country or region   Date[a]     Tested  Units[b] Confirmed(cases)\n",
       "1 Afghanistan         17 Dec 2020 154,767 samples  49,621          \n",
       "2 Albania             18 Feb 2021 428,654 samples  96,838          \n",
       "3 Algeria             2 Nov 2020  230,553 samples  58,574          \n",
       "4 Andorra             23 Feb 2022 300,307 samples  37,958          \n",
       "5 Angola              2 Feb 2021  399,228 samples  20,981          \n",
       "6 Antigua and Barbuda 6 Mar 2021  15,268  samples  832             \n",
       "  Confirmed /tested,% Tested /population,% Confirmed /population,% Ref.  \n",
       "1 32.1                0.40                 0.13                    [1]   \n",
       "2 22.6                15.0                 3.4                     [2]   \n",
       "3 25.4                0.53                 0.13                    [3][4]\n",
       "4 12.6                387                  49.0                    [5]   \n",
       "5 5.3                 1.3                  0.067                   [6]   \n",
       "6 5.4                 15.9                 0.86                    [7]   "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Read the table node and convert it into a data frame, and print the data frame for review\n",
    "covid19_data_frame <- html_table(table_node)\n",
    "head(covid19_data_frame)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 3: Pre-process and export the extracted data frame\n",
    "\n",
    "The goal of task 3 is to pre-process the extracted data frame from the previous step, and export it as a csv file\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's get a summary of the data frame\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       " Country or region    Date[a]             Tested            Units[b]        \n",
       " Length:173         Length:173         Length:173         Length:173        \n",
       " Class :character   Class :character   Class :character   Class :character  \n",
       " Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n",
       " Confirmed(cases)   Confirmed /tested,% Tested /population,%\n",
       " Length:173         Length:173          Length:173          \n",
       " Class :character   Class :character    Class :character    \n",
       " Mode  :character   Mode  :character    Mode  :character    \n",
       " Confirmed /population,%     Ref.          \n",
       " Length:173              Length:173        \n",
       " Class :character        Class :character  \n",
       " Mode  :character        Mode  :character  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Print the summary of the data frame\n",
    "summary(covid19_data_frame)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you can see from the summary, the columns names are little bit different to understand and some column data types are not correct. For example, the `Tested` column shows as `character`.\n",
    "\n",
    "As such, the data frame read from HTML table will need some pre-processing such as removing irrelvant columns, renaming columns, and convert columns into proper data types.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We have prepared a pre-processing function for you to conver the data frame but you can also try to write one by yourself\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre class=language-r><code>.Primitive(\"return\")</code></pre>"
      ],
      "text/latex": [
       "\\begin{minted}{r}\n",
       ".Primitive(\"return\")\n",
       "\\end{minted}"
      ],
      "text/markdown": [
       "```r\n",
       ".Primitive(\"return\")\n",
       "```"
      ],
      "text/plain": [
       ".Primitive(\"return\")"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "preprocess_covid_data_frame <- function(data_frame) {\n",
    "    \n",
    "    shape <- dim(data_frame)\n",
    "\n",
    "    # Remove the World row\n",
    "    data_frame<-data_frame[!(data_frame$`Country or region`==\"World\"),]\n",
    "    # Remove the last row\n",
    "    data_frame <- data_frame[1:172, ]\n",
    "    \n",
    "    # We dont need the Units and Ref columns, so can be removed\n",
    "    data_frame[\"Ref.\"] <- NULL\n",
    "    data_frame[\"Units[b]\"] <- NULL\n",
    "    \n",
    "    # Renaming the columns\n",
    "    names(data_frame) <- c(\"country\", \"date\", \"tested\", \"confirmed\", \"confirmed.tested.ratio\", \"tested.population.ratio\", \"confirmed.population.ratio\")\n",
    "    \n",
    "    # Convert column data types\n",
    "    data_frame$country <- as.factor(data_frame$country)\n",
    "    data_frame$date <- as.factor(data_frame$date)\n",
    "    data_frame$tested <- as.numeric(gsub(\",\",\"\",data_frame$tested))\n",
    "    data_frame$confirmed <- as.numeric(gsub(\",\",\"\",data_frame$confirmed))\n",
    "    data_frame$'confirmed.tested.ratio' <- as.numeric(gsub(\",\",\"\",data_frame$`confirmed.tested.ratio`))\n",
    "    data_frame$'tested.population.ratio' <- as.numeric(gsub(\",\",\"\",data_frame$`tested.population.ratio`))\n",
    "    data_frame$'confirmed.population.ratio' <- as.numeric(gsub(\",\",\"\",data_frame$`confirmed.population.ratio`))\n",
    "    \n",
    "    return(data_frame)\n",
    "}\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Call the `preprocess_covid_data_frame` function\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<caption>A data.frame: 172 × 7</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>country</th><th scope=col>date</th><th scope=col>tested</th><th scope=col>confirmed</th><th scope=col>confirmed.tested.ratio</th><th scope=col>tested.population.ratio</th><th scope=col>confirmed.population.ratio</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th><th scope=col>&lt;dbl&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>1</th><td>Afghanistan           </td><td>17 Dec 2020</td><td>   154767</td><td>   49621</td><td>32.10</td><td>   0.40</td><td> 0.1300</td></tr>\n",
       "\t<tr><th scope=row>2</th><td>Albania               </td><td>18 Feb 2021</td><td>   428654</td><td>   96838</td><td>22.60</td><td>  15.00</td><td> 3.4000</td></tr>\n",
       "\t<tr><th scope=row>3</th><td>Algeria               </td><td>2 Nov 2020 </td><td>   230553</td><td>   58574</td><td>25.40</td><td>   0.53</td><td> 0.1300</td></tr>\n",
       "\t<tr><th scope=row>4</th><td>Andorra               </td><td>23 Feb 2022</td><td>   300307</td><td>   37958</td><td>12.60</td><td> 387.00</td><td>49.0000</td></tr>\n",
       "\t<tr><th scope=row>5</th><td>Angola                </td><td>2 Feb 2021 </td><td>   399228</td><td>   20981</td><td> 5.30</td><td>   1.30</td><td> 0.0670</td></tr>\n",
       "\t<tr><th scope=row>6</th><td>Antigua and Barbuda   </td><td>6 Mar 2021 </td><td>    15268</td><td>     832</td><td> 5.40</td><td>  15.90</td><td> 0.8600</td></tr>\n",
       "\t<tr><th scope=row>7</th><td>Argentina             </td><td>16 Apr 2022</td><td> 35716069</td><td> 9060495</td><td>25.40</td><td>  78.30</td><td>20.0000</td></tr>\n",
       "\t<tr><th scope=row>8</th><td>Armenia               </td><td>29 May 2022</td><td>  3099602</td><td>  422963</td><td>13.60</td><td> 105.00</td><td>14.3000</td></tr>\n",
       "\t<tr><th scope=row>9</th><td>Australia             </td><td>1 Sep 2022 </td><td> 78280841</td><td>10053456</td><td>12.80</td><td> 312.00</td><td> 4.2000</td></tr>\n",
       "\t<tr><th scope=row>10</th><td>Austria               </td><td>2 Sep 2022 </td><td>195567915</td><td> 4970195</td><td> 2.50</td><td>2197.00</td><td>55.8000</td></tr>\n",
       "\t<tr><th scope=row>11</th><td>Azerbaijan            </td><td>11 May 2022</td><td>  6838458</td><td>  792638</td><td>11.60</td><td>  69.10</td><td> 8.0000</td></tr>\n",
       "\t<tr><th scope=row>12</th><td>Bahamas               </td><td>28 Jul 2022</td><td>   246932</td><td>   36670</td><td>14.90</td><td>  64.00</td><td> 9.5000</td></tr>\n",
       "\t<tr><th scope=row>13</th><td>Bahrain               </td><td>29 Aug 2022</td><td> 10271644</td><td>  671252</td><td> 6.50</td><td> 654.00</td><td>42.8000</td></tr>\n",
       "\t<tr><th scope=row>14</th><td>Bangladesh            </td><td>24 Jul 2021</td><td>  7417714</td><td> 1151644</td><td>15.50</td><td>   4.50</td><td> 0.7000</td></tr>\n",
       "\t<tr><th scope=row>15</th><td>Barbados              </td><td>29 Aug 2022</td><td>   754506</td><td>  100973</td><td>13.40</td><td> 263.00</td><td>35.2000</td></tr>\n",
       "\t<tr><th scope=row>16</th><td>Belarus               </td><td>9 May 2022 </td><td> 13217569</td><td>  982809</td><td> 7.40</td><td> 139.00</td><td>10.4000</td></tr>\n",
       "\t<tr><th scope=row>17</th><td>Belgium               </td><td>29 Aug 2022</td><td> 35286170</td><td> 4482315</td><td>12.70</td><td> 306.00</td><td>38.9000</td></tr>\n",
       "\t<tr><th scope=row>18</th><td>Belize                </td><td>8 Jun 2022 </td><td>   572900</td><td>   60694</td><td>10.60</td><td> 140.00</td><td>14.9000</td></tr>\n",
       "\t<tr><th scope=row>19</th><td>Benin                 </td><td>4 May 2021 </td><td>   595112</td><td>    7884</td><td> 1.30</td><td>   5.10</td><td> 0.0670</td></tr>\n",
       "\t<tr><th scope=row>20</th><td>Bhutan                </td><td>28 Feb 2022</td><td>  1736168</td><td>   12702</td><td> 0.73</td><td> 234.00</td><td> 1.7100</td></tr>\n",
       "\t<tr><th scope=row>21</th><td>Bolivia               </td><td>5 Jun 2022 </td><td>  4358669</td><td>  910228</td><td>20.90</td><td>  38.10</td><td> 8.0000</td></tr>\n",
       "\t<tr><th scope=row>22</th><td>Bosnia and Herzegovina</td><td>1 Sep 2022 </td><td>  1844604</td><td>  395994</td><td>21.50</td><td>  53.90</td><td>11.6000</td></tr>\n",
       "\t<tr><th scope=row>23</th><td>Botswana              </td><td>11 Jan 2022</td><td>  2026898</td><td>  232432</td><td>11.50</td><td>  89.90</td><td>10.3000</td></tr>\n",
       "\t<tr><th scope=row>24</th><td>Brazil                </td><td>19 Feb 2021</td><td> 23561497</td><td>10081676</td><td>42.80</td><td>  11.20</td><td> 4.8000</td></tr>\n",
       "\t<tr><th scope=row>25</th><td>Brunei                </td><td>2 Aug 2021 </td><td>   153804</td><td>     338</td><td> 0.22</td><td>  33.50</td><td> 0.0740</td></tr>\n",
       "\t<tr><th scope=row>26</th><td>Bulgaria              </td><td>31 Aug 2022</td><td> 10435728</td><td> 1242910</td><td>11.90</td><td> 150.00</td><td>17.9000</td></tr>\n",
       "\t<tr><th scope=row>27</th><td>Burkina Faso          </td><td>4 Mar 2021 </td><td>   158777</td><td>   12123</td><td> 7.60</td><td>   0.76</td><td> 0.0580</td></tr>\n",
       "\t<tr><th scope=row>28</th><td>Burundi               </td><td>5 Jan 2021 </td><td>    90019</td><td>     884</td><td> 0.98</td><td>   0.76</td><td> 0.0074</td></tr>\n",
       "\t<tr><th scope=row>29</th><td>Cambodia              </td><td>1 Aug 2021 </td><td>  1812706</td><td>   77914</td><td> 4.30</td><td>  11.20</td><td> 0.4800</td></tr>\n",
       "\t<tr><th scope=row>30</th><td>Cameroon              </td><td>18 Feb 2021</td><td>   942685</td><td>   32681</td><td> 3.50</td><td>   3.60</td><td> 0.1200</td></tr>\n",
       "\t<tr><th scope=row>⋮</th><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td><td>⋮</td></tr>\n",
       "\t<tr><th scope=row>143</th><td>Serbia              </td><td>30 Aug 2022</td><td> 10677222</td><td> 2283195</td><td>21.40</td><td> 153.0000</td><td>32.80000</td></tr>\n",
       "\t<tr><th scope=row>144</th><td>Singapore           </td><td>3 Aug 2021 </td><td> 16206203</td><td>   65315</td><td> 0.40</td><td> 284.0000</td><td> 1.10000</td></tr>\n",
       "\t<tr><th scope=row>145</th><td>Slovakia            </td><td>30 Aug 2022</td><td>  7268067</td><td> 1834215</td><td>25.20</td><td> 133.0000</td><td>33.60000</td></tr>\n",
       "\t<tr><th scope=row>146</th><td>Slovenia            </td><td>31 Aug 2022</td><td>  2722910</td><td> 1128277</td><td>41.40</td><td> 130.0000</td><td>53.90000</td></tr>\n",
       "\t<tr><th scope=row>147</th><td>South Africa        </td><td>24 May 2021</td><td> 11378282</td><td> 1637848</td><td>14.40</td><td>  19.2000</td><td> 2.80000</td></tr>\n",
       "\t<tr><th scope=row>148</th><td>South Korea         </td><td>1 Mar 2021 </td><td>  6592010</td><td>   90029</td><td> 1.40</td><td>  12.7000</td><td> 0.17000</td></tr>\n",
       "\t<tr><th scope=row>149</th><td>South Sudan         </td><td>26 May 2021</td><td>   164472</td><td>   10688</td><td> 6.50</td><td>   1.3000</td><td> 0.08400</td></tr>\n",
       "\t<tr><th scope=row>150</th><td>Spain               </td><td>1 Jul 2021 </td><td> 54128524</td><td> 3821305</td><td> 7.10</td><td> 116.0000</td><td> 8.20000</td></tr>\n",
       "\t<tr><th scope=row>151</th><td>Sri Lanka           </td><td>30 Mar 2021</td><td>  2384745</td><td>   93128</td><td> 3.90</td><td>  10.9000</td><td> 0.43000</td></tr>\n",
       "\t<tr><th scope=row>152</th><td>Sudan               </td><td>7 Jan 2021 </td><td>   158804</td><td>   23316</td><td>14.70</td><td>   0.3600</td><td> 0.05300</td></tr>\n",
       "\t<tr><th scope=row>153</th><td>Sweden              </td><td>24 May 2021</td><td>  9996795</td><td> 1074751</td><td>10.80</td><td>  96.8000</td><td>10.40000</td></tr>\n",
       "\t<tr><th scope=row>154</th><td>Switzerland[l]      </td><td>29 Aug 2022</td><td> 22591703</td><td> 4045006</td><td>17.90</td><td> 262.0000</td><td>47.00000</td></tr>\n",
       "\t<tr><th scope=row>155</th><td>Taiwan[m]           </td><td>31 Aug 2022</td><td> 24379957</td><td> 5342106</td><td>21.91</td><td> 103.3000</td><td>22.63200</td></tr>\n",
       "\t<tr><th scope=row>156</th><td>Tanzania            </td><td>18 Nov 2020</td><td>     3880</td><td>     509</td><td>13.10</td><td>   0.0065</td><td> 0.00085</td></tr>\n",
       "\t<tr><th scope=row>157</th><td>Thailand            </td><td>4 Mar 2021 </td><td>  1579597</td><td>   26162</td><td> 1.70</td><td>   2.3000</td><td> 0.03800</td></tr>\n",
       "\t<tr><th scope=row>158</th><td>Togo                </td><td>1 Sep 2022 </td><td>   785873</td><td>   38517</td><td> 4.90</td><td>   9.1000</td><td> 0.45000</td></tr>\n",
       "\t<tr><th scope=row>159</th><td>Trinidad and Tobago </td><td>3 Jan 2022 </td><td>   512730</td><td>   92997</td><td>18.10</td><td>  37.6000</td><td> 6.80000</td></tr>\n",
       "\t<tr><th scope=row>160</th><td>Tunisia             </td><td>23 Aug 2021</td><td>  2893625</td><td>  703732</td><td>24.30</td><td>  24.5000</td><td> 6.00000</td></tr>\n",
       "\t<tr><th scope=row>161</th><td>Turkey              </td><td>2 Jul 2021 </td><td> 61236294</td><td> 5435831</td><td> 8.90</td><td>  73.6000</td><td> 6.50000</td></tr>\n",
       "\t<tr><th scope=row>162</th><td>Uganda              </td><td>11 Feb 2021</td><td>   852444</td><td>   39979</td><td> 4.70</td><td>   1.9000</td><td> 0.08700</td></tr>\n",
       "\t<tr><th scope=row>163</th><td>Ukraine             </td><td>24 Nov 2021</td><td> 15648456</td><td> 3367461</td><td>21.50</td><td>  37.2000</td><td> 8.00000</td></tr>\n",
       "\t<tr><th scope=row>164</th><td>United Arab Emirates</td><td>29 Aug 2022</td><td>183625660</td><td> 1014387</td><td> 0.55</td><td>1913.0000</td><td>10.60000</td></tr>\n",
       "\t<tr><th scope=row>165</th><td>United Kingdom      </td><td>19 May 2022</td><td>522526476</td><td>22232377</td><td> 4.30</td><td> 774.0000</td><td>32.90000</td></tr>\n",
       "\t<tr><th scope=row>166</th><td>United States       </td><td>29 Jul 2022</td><td>929349291</td><td>90749469</td><td> 9.80</td><td> 281.0000</td><td>27.40000</td></tr>\n",
       "\t<tr><th scope=row>167</th><td>Uruguay             </td><td>16 Apr 2022</td><td>  6089116</td><td>  895592</td><td>14.70</td><td> 175.0000</td><td>25.80000</td></tr>\n",
       "\t<tr><th scope=row>168</th><td>Uzbekistan          </td><td>7 Sep 2020 </td><td>  2630000</td><td>   43975</td><td> 1.70</td><td>   7.7000</td><td> 0.13000</td></tr>\n",
       "\t<tr><th scope=row>169</th><td>Venezuela           </td><td>30 Mar 2021</td><td>  3179074</td><td>  159149</td><td> 5.00</td><td>  11.0000</td><td> 0.55000</td></tr>\n",
       "\t<tr><th scope=row>170</th><td>Vietnam             </td><td>28 Aug 2022</td><td> 45772571</td><td>11403302</td><td>24.90</td><td>  46.4000</td><td>11.60000</td></tr>\n",
       "\t<tr><th scope=row>171</th><td>Zambia              </td><td>10 Mar 2022</td><td>  3301860</td><td>  314850</td><td> 9.50</td><td>  19.0000</td><td> 1.80000</td></tr>\n",
       "\t<tr><th scope=row>172</th><td>Zimbabwe            </td><td>1 Sep 2022 </td><td>  2483798</td><td>  256744</td><td>10.30</td><td>  16.7000</td><td> 1.70000</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 172 × 7\n",
       "\\begin{tabular}{r|lllllll}\n",
       "  & country & date & tested & confirmed & confirmed.tested.ratio & tested.population.ratio & confirmed.population.ratio\\\\\n",
       "  & <fct> & <fct> & <dbl> & <dbl> & <dbl> & <dbl> & <dbl>\\\\\n",
       "\\hline\n",
       "\t1 & Afghanistan            & 17 Dec 2020 &    154767 &    49621 & 32.10 &    0.40 &  0.1300\\\\\n",
       "\t2 & Albania                & 18 Feb 2021 &    428654 &    96838 & 22.60 &   15.00 &  3.4000\\\\\n",
       "\t3 & Algeria                & 2 Nov 2020  &    230553 &    58574 & 25.40 &    0.53 &  0.1300\\\\\n",
       "\t4 & Andorra                & 23 Feb 2022 &    300307 &    37958 & 12.60 &  387.00 & 49.0000\\\\\n",
       "\t5 & Angola                 & 2 Feb 2021  &    399228 &    20981 &  5.30 &    1.30 &  0.0670\\\\\n",
       "\t6 & Antigua and Barbuda    & 6 Mar 2021  &     15268 &      832 &  5.40 &   15.90 &  0.8600\\\\\n",
       "\t7 & Argentina              & 16 Apr 2022 &  35716069 &  9060495 & 25.40 &   78.30 & 20.0000\\\\\n",
       "\t8 & Armenia                & 29 May 2022 &   3099602 &   422963 & 13.60 &  105.00 & 14.3000\\\\\n",
       "\t9 & Australia              & 1 Sep 2022  &  78280841 & 10053456 & 12.80 &  312.00 &  4.2000\\\\\n",
       "\t10 & Austria                & 2 Sep 2022  & 195567915 &  4970195 &  2.50 & 2197.00 & 55.8000\\\\\n",
       "\t11 & Azerbaijan             & 11 May 2022 &   6838458 &   792638 & 11.60 &   69.10 &  8.0000\\\\\n",
       "\t12 & Bahamas                & 28 Jul 2022 &    246932 &    36670 & 14.90 &   64.00 &  9.5000\\\\\n",
       "\t13 & Bahrain                & 29 Aug 2022 &  10271644 &   671252 &  6.50 &  654.00 & 42.8000\\\\\n",
       "\t14 & Bangladesh             & 24 Jul 2021 &   7417714 &  1151644 & 15.50 &    4.50 &  0.7000\\\\\n",
       "\t15 & Barbados               & 29 Aug 2022 &    754506 &   100973 & 13.40 &  263.00 & 35.2000\\\\\n",
       "\t16 & Belarus                & 9 May 2022  &  13217569 &   982809 &  7.40 &  139.00 & 10.4000\\\\\n",
       "\t17 & Belgium                & 29 Aug 2022 &  35286170 &  4482315 & 12.70 &  306.00 & 38.9000\\\\\n",
       "\t18 & Belize                 & 8 Jun 2022  &    572900 &    60694 & 10.60 &  140.00 & 14.9000\\\\\n",
       "\t19 & Benin                  & 4 May 2021  &    595112 &     7884 &  1.30 &    5.10 &  0.0670\\\\\n",
       "\t20 & Bhutan                 & 28 Feb 2022 &   1736168 &    12702 &  0.73 &  234.00 &  1.7100\\\\\n",
       "\t21 & Bolivia                & 5 Jun 2022  &   4358669 &   910228 & 20.90 &   38.10 &  8.0000\\\\\n",
       "\t22 & Bosnia and Herzegovina & 1 Sep 2022  &   1844604 &   395994 & 21.50 &   53.90 & 11.6000\\\\\n",
       "\t23 & Botswana               & 11 Jan 2022 &   2026898 &   232432 & 11.50 &   89.90 & 10.3000\\\\\n",
       "\t24 & Brazil                 & 19 Feb 2021 &  23561497 & 10081676 & 42.80 &   11.20 &  4.8000\\\\\n",
       "\t25 & Brunei                 & 2 Aug 2021  &    153804 &      338 &  0.22 &   33.50 &  0.0740\\\\\n",
       "\t26 & Bulgaria               & 31 Aug 2022 &  10435728 &  1242910 & 11.90 &  150.00 & 17.9000\\\\\n",
       "\t27 & Burkina Faso           & 4 Mar 2021  &    158777 &    12123 &  7.60 &    0.76 &  0.0580\\\\\n",
       "\t28 & Burundi                & 5 Jan 2021  &     90019 &      884 &  0.98 &    0.76 &  0.0074\\\\\n",
       "\t29 & Cambodia               & 1 Aug 2021  &   1812706 &    77914 &  4.30 &   11.20 &  0.4800\\\\\n",
       "\t30 & Cameroon               & 18 Feb 2021 &    942685 &    32681 &  3.50 &    3.60 &  0.1200\\\\\n",
       "\t⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮ & ⋮\\\\\n",
       "\t143 & Serbia               & 30 Aug 2022 &  10677222 &  2283195 & 21.40 &  153.0000 & 32.80000\\\\\n",
       "\t144 & Singapore            & 3 Aug 2021  &  16206203 &    65315 &  0.40 &  284.0000 &  1.10000\\\\\n",
       "\t145 & Slovakia             & 30 Aug 2022 &   7268067 &  1834215 & 25.20 &  133.0000 & 33.60000\\\\\n",
       "\t146 & Slovenia             & 31 Aug 2022 &   2722910 &  1128277 & 41.40 &  130.0000 & 53.90000\\\\\n",
       "\t147 & South Africa         & 24 May 2021 &  11378282 &  1637848 & 14.40 &   19.2000 &  2.80000\\\\\n",
       "\t148 & South Korea          & 1 Mar 2021  &   6592010 &    90029 &  1.40 &   12.7000 &  0.17000\\\\\n",
       "\t149 & South Sudan          & 26 May 2021 &    164472 &    10688 &  6.50 &    1.3000 &  0.08400\\\\\n",
       "\t150 & Spain                & 1 Jul 2021  &  54128524 &  3821305 &  7.10 &  116.0000 &  8.20000\\\\\n",
       "\t151 & Sri Lanka            & 30 Mar 2021 &   2384745 &    93128 &  3.90 &   10.9000 &  0.43000\\\\\n",
       "\t152 & Sudan                & 7 Jan 2021  &    158804 &    23316 & 14.70 &    0.3600 &  0.05300\\\\\n",
       "\t153 & Sweden               & 24 May 2021 &   9996795 &  1074751 & 10.80 &   96.8000 & 10.40000\\\\\n",
       "\t154 & Switzerland{[}l{]}       & 29 Aug 2022 &  22591703 &  4045006 & 17.90 &  262.0000 & 47.00000\\\\\n",
       "\t155 & Taiwan{[}m{]}            & 31 Aug 2022 &  24379957 &  5342106 & 21.91 &  103.3000 & 22.63200\\\\\n",
       "\t156 & Tanzania             & 18 Nov 2020 &      3880 &      509 & 13.10 &    0.0065 &  0.00085\\\\\n",
       "\t157 & Thailand             & 4 Mar 2021  &   1579597 &    26162 &  1.70 &    2.3000 &  0.03800\\\\\n",
       "\t158 & Togo                 & 1 Sep 2022  &    785873 &    38517 &  4.90 &    9.1000 &  0.45000\\\\\n",
       "\t159 & Trinidad and Tobago  & 3 Jan 2022  &    512730 &    92997 & 18.10 &   37.6000 &  6.80000\\\\\n",
       "\t160 & Tunisia              & 23 Aug 2021 &   2893625 &   703732 & 24.30 &   24.5000 &  6.00000\\\\\n",
       "\t161 & Turkey               & 2 Jul 2021  &  61236294 &  5435831 &  8.90 &   73.6000 &  6.50000\\\\\n",
       "\t162 & Uganda               & 11 Feb 2021 &    852444 &    39979 &  4.70 &    1.9000 &  0.08700\\\\\n",
       "\t163 & Ukraine              & 24 Nov 2021 &  15648456 &  3367461 & 21.50 &   37.2000 &  8.00000\\\\\n",
       "\t164 & United Arab Emirates & 29 Aug 2022 & 183625660 &  1014387 &  0.55 & 1913.0000 & 10.60000\\\\\n",
       "\t165 & United Kingdom       & 19 May 2022 & 522526476 & 22232377 &  4.30 &  774.0000 & 32.90000\\\\\n",
       "\t166 & United States        & 29 Jul 2022 & 929349291 & 90749469 &  9.80 &  281.0000 & 27.40000\\\\\n",
       "\t167 & Uruguay              & 16 Apr 2022 &   6089116 &   895592 & 14.70 &  175.0000 & 25.80000\\\\\n",
       "\t168 & Uzbekistan           & 7 Sep 2020  &   2630000 &    43975 &  1.70 &    7.7000 &  0.13000\\\\\n",
       "\t169 & Venezuela            & 30 Mar 2021 &   3179074 &   159149 &  5.00 &   11.0000 &  0.55000\\\\\n",
       "\t170 & Vietnam              & 28 Aug 2022 &  45772571 & 11403302 & 24.90 &   46.4000 & 11.60000\\\\\n",
       "\t171 & Zambia               & 10 Mar 2022 &   3301860 &   314850 &  9.50 &   19.0000 &  1.80000\\\\\n",
       "\t172 & Zimbabwe             & 1 Sep 2022  &   2483798 &   256744 & 10.30 &   16.7000 &  1.70000\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 172 × 7\n",
       "\n",
       "| <!--/--> | country &lt;fct&gt; | date &lt;fct&gt; | tested &lt;dbl&gt; | confirmed &lt;dbl&gt; | confirmed.tested.ratio &lt;dbl&gt; | tested.population.ratio &lt;dbl&gt; | confirmed.population.ratio &lt;dbl&gt; |\n",
       "|---|---|---|---|---|---|---|---|\n",
       "| 1 | Afghanistan            | 17 Dec 2020 |    154767 |    49621 | 32.10 |    0.40 |  0.1300 |\n",
       "| 2 | Albania                | 18 Feb 2021 |    428654 |    96838 | 22.60 |   15.00 |  3.4000 |\n",
       "| 3 | Algeria                | 2 Nov 2020  |    230553 |    58574 | 25.40 |    0.53 |  0.1300 |\n",
       "| 4 | Andorra                | 23 Feb 2022 |    300307 |    37958 | 12.60 |  387.00 | 49.0000 |\n",
       "| 5 | Angola                 | 2 Feb 2021  |    399228 |    20981 |  5.30 |    1.30 |  0.0670 |\n",
       "| 6 | Antigua and Barbuda    | 6 Mar 2021  |     15268 |      832 |  5.40 |   15.90 |  0.8600 |\n",
       "| 7 | Argentina              | 16 Apr 2022 |  35716069 |  9060495 | 25.40 |   78.30 | 20.0000 |\n",
       "| 8 | Armenia                | 29 May 2022 |   3099602 |   422963 | 13.60 |  105.00 | 14.3000 |\n",
       "| 9 | Australia              | 1 Sep 2022  |  78280841 | 10053456 | 12.80 |  312.00 |  4.2000 |\n",
       "| 10 | Austria                | 2 Sep 2022  | 195567915 |  4970195 |  2.50 | 2197.00 | 55.8000 |\n",
       "| 11 | Azerbaijan             | 11 May 2022 |   6838458 |   792638 | 11.60 |   69.10 |  8.0000 |\n",
       "| 12 | Bahamas                | 28 Jul 2022 |    246932 |    36670 | 14.90 |   64.00 |  9.5000 |\n",
       "| 13 | Bahrain                | 29 Aug 2022 |  10271644 |   671252 |  6.50 |  654.00 | 42.8000 |\n",
       "| 14 | Bangladesh             | 24 Jul 2021 |   7417714 |  1151644 | 15.50 |    4.50 |  0.7000 |\n",
       "| 15 | Barbados               | 29 Aug 2022 |    754506 |   100973 | 13.40 |  263.00 | 35.2000 |\n",
       "| 16 | Belarus                | 9 May 2022  |  13217569 |   982809 |  7.40 |  139.00 | 10.4000 |\n",
       "| 17 | Belgium                | 29 Aug 2022 |  35286170 |  4482315 | 12.70 |  306.00 | 38.9000 |\n",
       "| 18 | Belize                 | 8 Jun 2022  |    572900 |    60694 | 10.60 |  140.00 | 14.9000 |\n",
       "| 19 | Benin                  | 4 May 2021  |    595112 |     7884 |  1.30 |    5.10 |  0.0670 |\n",
       "| 20 | Bhutan                 | 28 Feb 2022 |   1736168 |    12702 |  0.73 |  234.00 |  1.7100 |\n",
       "| 21 | Bolivia                | 5 Jun 2022  |   4358669 |   910228 | 20.90 |   38.10 |  8.0000 |\n",
       "| 22 | Bosnia and Herzegovina | 1 Sep 2022  |   1844604 |   395994 | 21.50 |   53.90 | 11.6000 |\n",
       "| 23 | Botswana               | 11 Jan 2022 |   2026898 |   232432 | 11.50 |   89.90 | 10.3000 |\n",
       "| 24 | Brazil                 | 19 Feb 2021 |  23561497 | 10081676 | 42.80 |   11.20 |  4.8000 |\n",
       "| 25 | Brunei                 | 2 Aug 2021  |    153804 |      338 |  0.22 |   33.50 |  0.0740 |\n",
       "| 26 | Bulgaria               | 31 Aug 2022 |  10435728 |  1242910 | 11.90 |  150.00 | 17.9000 |\n",
       "| 27 | Burkina Faso           | 4 Mar 2021  |    158777 |    12123 |  7.60 |    0.76 |  0.0580 |\n",
       "| 28 | Burundi                | 5 Jan 2021  |     90019 |      884 |  0.98 |    0.76 |  0.0074 |\n",
       "| 29 | Cambodia               | 1 Aug 2021  |   1812706 |    77914 |  4.30 |   11.20 |  0.4800 |\n",
       "| 30 | Cameroon               | 18 Feb 2021 |    942685 |    32681 |  3.50 |    3.60 |  0.1200 |\n",
       "| ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ | ⋮ |\n",
       "| 143 | Serbia               | 30 Aug 2022 |  10677222 |  2283195 | 21.40 |  153.0000 | 32.80000 |\n",
       "| 144 | Singapore            | 3 Aug 2021  |  16206203 |    65315 |  0.40 |  284.0000 |  1.10000 |\n",
       "| 145 | Slovakia             | 30 Aug 2022 |   7268067 |  1834215 | 25.20 |  133.0000 | 33.60000 |\n",
       "| 146 | Slovenia             | 31 Aug 2022 |   2722910 |  1128277 | 41.40 |  130.0000 | 53.90000 |\n",
       "| 147 | South Africa         | 24 May 2021 |  11378282 |  1637848 | 14.40 |   19.2000 |  2.80000 |\n",
       "| 148 | South Korea          | 1 Mar 2021  |   6592010 |    90029 |  1.40 |   12.7000 |  0.17000 |\n",
       "| 149 | South Sudan          | 26 May 2021 |    164472 |    10688 |  6.50 |    1.3000 |  0.08400 |\n",
       "| 150 | Spain                | 1 Jul 2021  |  54128524 |  3821305 |  7.10 |  116.0000 |  8.20000 |\n",
       "| 151 | Sri Lanka            | 30 Mar 2021 |   2384745 |    93128 |  3.90 |   10.9000 |  0.43000 |\n",
       "| 152 | Sudan                | 7 Jan 2021  |    158804 |    23316 | 14.70 |    0.3600 |  0.05300 |\n",
       "| 153 | Sweden               | 24 May 2021 |   9996795 |  1074751 | 10.80 |   96.8000 | 10.40000 |\n",
       "| 154 | Switzerland[l]       | 29 Aug 2022 |  22591703 |  4045006 | 17.90 |  262.0000 | 47.00000 |\n",
       "| 155 | Taiwan[m]            | 31 Aug 2022 |  24379957 |  5342106 | 21.91 |  103.3000 | 22.63200 |\n",
       "| 156 | Tanzania             | 18 Nov 2020 |      3880 |      509 | 13.10 |    0.0065 |  0.00085 |\n",
       "| 157 | Thailand             | 4 Mar 2021  |   1579597 |    26162 |  1.70 |    2.3000 |  0.03800 |\n",
       "| 158 | Togo                 | 1 Sep 2022  |    785873 |    38517 |  4.90 |    9.1000 |  0.45000 |\n",
       "| 159 | Trinidad and Tobago  | 3 Jan 2022  |    512730 |    92997 | 18.10 |   37.6000 |  6.80000 |\n",
       "| 160 | Tunisia              | 23 Aug 2021 |   2893625 |   703732 | 24.30 |   24.5000 |  6.00000 |\n",
       "| 161 | Turkey               | 2 Jul 2021  |  61236294 |  5435831 |  8.90 |   73.6000 |  6.50000 |\n",
       "| 162 | Uganda               | 11 Feb 2021 |    852444 |    39979 |  4.70 |    1.9000 |  0.08700 |\n",
       "| 163 | Ukraine              | 24 Nov 2021 |  15648456 |  3367461 | 21.50 |   37.2000 |  8.00000 |\n",
       "| 164 | United Arab Emirates | 29 Aug 2022 | 183625660 |  1014387 |  0.55 | 1913.0000 | 10.60000 |\n",
       "| 165 | United Kingdom       | 19 May 2022 | 522526476 | 22232377 |  4.30 |  774.0000 | 32.90000 |\n",
       "| 166 | United States        | 29 Jul 2022 | 929349291 | 90749469 |  9.80 |  281.0000 | 27.40000 |\n",
       "| 167 | Uruguay              | 16 Apr 2022 |   6089116 |   895592 | 14.70 |  175.0000 | 25.80000 |\n",
       "| 168 | Uzbekistan           | 7 Sep 2020  |   2630000 |    43975 |  1.70 |    7.7000 |  0.13000 |\n",
       "| 169 | Venezuela            | 30 Mar 2021 |   3179074 |   159149 |  5.00 |   11.0000 |  0.55000 |\n",
       "| 170 | Vietnam              | 28 Aug 2022 |  45772571 | 11403302 | 24.90 |   46.4000 | 11.60000 |\n",
       "| 171 | Zambia               | 10 Mar 2022 |   3301860 |   314850 |  9.50 |   19.0000 |  1.80000 |\n",
       "| 172 | Zimbabwe             | 1 Sep 2022  |   2483798 |   256744 | 10.30 |   16.7000 |  1.70000 |\n",
       "\n"
      ],
      "text/plain": [
       "    country                date        tested    confirmed\n",
       "1   Afghanistan            17 Dec 2020    154767    49621 \n",
       "2   Albania                18 Feb 2021    428654    96838 \n",
       "3   Algeria                2 Nov 2020     230553    58574 \n",
       "4   Andorra                23 Feb 2022    300307    37958 \n",
       "5   Angola                 2 Feb 2021     399228    20981 \n",
       "6   Antigua and Barbuda    6 Mar 2021      15268      832 \n",
       "7   Argentina              16 Apr 2022  35716069  9060495 \n",
       "8   Armenia                29 May 2022   3099602   422963 \n",
       "9   Australia              1 Sep 2022   78280841 10053456 \n",
       "10  Austria                2 Sep 2022  195567915  4970195 \n",
       "11  Azerbaijan             11 May 2022   6838458   792638 \n",
       "12  Bahamas                28 Jul 2022    246932    36670 \n",
       "13  Bahrain                29 Aug 2022  10271644   671252 \n",
       "14  Bangladesh             24 Jul 2021   7417714  1151644 \n",
       "15  Barbados               29 Aug 2022    754506   100973 \n",
       "16  Belarus                9 May 2022   13217569   982809 \n",
       "17  Belgium                29 Aug 2022  35286170  4482315 \n",
       "18  Belize                 8 Jun 2022     572900    60694 \n",
       "19  Benin                  4 May 2021     595112     7884 \n",
       "20  Bhutan                 28 Feb 2022   1736168    12702 \n",
       "21  Bolivia                5 Jun 2022    4358669   910228 \n",
       "22  Bosnia and Herzegovina 1 Sep 2022    1844604   395994 \n",
       "23  Botswana               11 Jan 2022   2026898   232432 \n",
       "24  Brazil                 19 Feb 2021  23561497 10081676 \n",
       "25  Brunei                 2 Aug 2021     153804      338 \n",
       "26  Bulgaria               31 Aug 2022  10435728  1242910 \n",
       "27  Burkina Faso           4 Mar 2021     158777    12123 \n",
       "28  Burundi                5 Jan 2021      90019      884 \n",
       "29  Cambodia               1 Aug 2021    1812706    77914 \n",
       "30  Cameroon               18 Feb 2021    942685    32681 \n",
       "⋮   ⋮                      ⋮           ⋮         ⋮        \n",
       "143 Serbia                 30 Aug 2022  10677222  2283195 \n",
       "144 Singapore              3 Aug 2021   16206203    65315 \n",
       "145 Slovakia               30 Aug 2022   7268067  1834215 \n",
       "146 Slovenia               31 Aug 2022   2722910  1128277 \n",
       "147 South Africa           24 May 2021  11378282  1637848 \n",
       "148 South Korea            1 Mar 2021    6592010    90029 \n",
       "149 South Sudan            26 May 2021    164472    10688 \n",
       "150 Spain                  1 Jul 2021   54128524  3821305 \n",
       "151 Sri Lanka              30 Mar 2021   2384745    93128 \n",
       "152 Sudan                  7 Jan 2021     158804    23316 \n",
       "153 Sweden                 24 May 2021   9996795  1074751 \n",
       "154 Switzerland[l]         29 Aug 2022  22591703  4045006 \n",
       "155 Taiwan[m]              31 Aug 2022  24379957  5342106 \n",
       "156 Tanzania               18 Nov 2020      3880      509 \n",
       "157 Thailand               4 Mar 2021    1579597    26162 \n",
       "158 Togo                   1 Sep 2022     785873    38517 \n",
       "159 Trinidad and Tobago    3 Jan 2022     512730    92997 \n",
       "160 Tunisia                23 Aug 2021   2893625   703732 \n",
       "161 Turkey                 2 Jul 2021   61236294  5435831 \n",
       "162 Uganda                 11 Feb 2021    852444    39979 \n",
       "163 Ukraine                24 Nov 2021  15648456  3367461 \n",
       "164 United Arab Emirates   29 Aug 2022 183625660  1014387 \n",
       "165 United Kingdom         19 May 2022 522526476 22232377 \n",
       "166 United States          29 Jul 2022 929349291 90749469 \n",
       "167 Uruguay                16 Apr 2022   6089116   895592 \n",
       "168 Uzbekistan             7 Sep 2020    2630000    43975 \n",
       "169 Venezuela              30 Mar 2021   3179074   159149 \n",
       "170 Vietnam                28 Aug 2022  45772571 11403302 \n",
       "171 Zambia                 10 Mar 2022   3301860   314850 \n",
       "172 Zimbabwe               1 Sep 2022    2483798   256744 \n",
       "    confirmed.tested.ratio tested.population.ratio confirmed.population.ratio\n",
       "1   32.10                     0.40                  0.1300                   \n",
       "2   22.60                    15.00                  3.4000                   \n",
       "3   25.40                     0.53                  0.1300                   \n",
       "4   12.60                   387.00                 49.0000                   \n",
       "5    5.30                     1.30                  0.0670                   \n",
       "6    5.40                    15.90                  0.8600                   \n",
       "7   25.40                    78.30                 20.0000                   \n",
       "8   13.60                   105.00                 14.3000                   \n",
       "9   12.80                   312.00                  4.2000                   \n",
       "10   2.50                  2197.00                 55.8000                   \n",
       "11  11.60                    69.10                  8.0000                   \n",
       "12  14.90                    64.00                  9.5000                   \n",
       "13   6.50                   654.00                 42.8000                   \n",
       "14  15.50                     4.50                  0.7000                   \n",
       "15  13.40                   263.00                 35.2000                   \n",
       "16   7.40                   139.00                 10.4000                   \n",
       "17  12.70                   306.00                 38.9000                   \n",
       "18  10.60                   140.00                 14.9000                   \n",
       "19   1.30                     5.10                  0.0670                   \n",
       "20   0.73                   234.00                  1.7100                   \n",
       "21  20.90                    38.10                  8.0000                   \n",
       "22  21.50                    53.90                 11.6000                   \n",
       "23  11.50                    89.90                 10.3000                   \n",
       "24  42.80                    11.20                  4.8000                   \n",
       "25   0.22                    33.50                  0.0740                   \n",
       "26  11.90                   150.00                 17.9000                   \n",
       "27   7.60                     0.76                  0.0580                   \n",
       "28   0.98                     0.76                  0.0074                   \n",
       "29   4.30                    11.20                  0.4800                   \n",
       "30   3.50                     3.60                  0.1200                   \n",
       "⋮   ⋮                      ⋮                       ⋮                         \n",
       "143 21.40                   153.0000               32.80000                  \n",
       "144  0.40                   284.0000                1.10000                  \n",
       "145 25.20                   133.0000               33.60000                  \n",
       "146 41.40                   130.0000               53.90000                  \n",
       "147 14.40                    19.2000                2.80000                  \n",
       "148  1.40                    12.7000                0.17000                  \n",
       "149  6.50                     1.3000                0.08400                  \n",
       "150  7.10                   116.0000                8.20000                  \n",
       "151  3.90                    10.9000                0.43000                  \n",
       "152 14.70                     0.3600                0.05300                  \n",
       "153 10.80                    96.8000               10.40000                  \n",
       "154 17.90                   262.0000               47.00000                  \n",
       "155 21.91                   103.3000               22.63200                  \n",
       "156 13.10                     0.0065                0.00085                  \n",
       "157  1.70                     2.3000                0.03800                  \n",
       "158  4.90                     9.1000                0.45000                  \n",
       "159 18.10                    37.6000                6.80000                  \n",
       "160 24.30                    24.5000                6.00000                  \n",
       "161  8.90                    73.6000                6.50000                  \n",
       "162  4.70                     1.9000                0.08700                  \n",
       "163 21.50                    37.2000                8.00000                  \n",
       "164  0.55                  1913.0000               10.60000                  \n",
       "165  4.30                   774.0000               32.90000                  \n",
       "166  9.80                   281.0000               27.40000                  \n",
       "167 14.70                   175.0000               25.80000                  \n",
       "168  1.70                     7.7000                0.13000                  \n",
       "169  5.00                    11.0000                0.55000                  \n",
       "170 24.90                    46.4000               11.60000                  \n",
       "171  9.50                    19.0000                1.80000                  \n",
       "172 10.30                    16.7000                1.70000                  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# call `preprocess_covid_data_frame` function and assign it to a new data frame\n",
    "new_covid<- preprocess_covid_data_frame(covid19_data_frame)\n",
    "new_covid\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Get the summary of the processed data frame again\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "                country             date         tested         \n",
       " Afghanistan        :  1   1 Sep 2022 :  9   Min.   :     3880  \n",
       " Albania            :  1   31 Aug 2022:  9   1st Qu.:   512037  \n",
       " Algeria            :  1   29 Aug 2022:  7   Median :  3029859  \n",
       " Andorra            :  1   30 Aug 2022:  7   Mean   : 30814769  \n",
       " Angola             :  1   1 Mar 2021 :  3   3rd Qu.: 11840308  \n",
       " Antigua and Barbuda:  1   2 Sep 2022 :  3   Max.   :929349291  \n",
       " (Other)            :166   (Other)    :134                      \n",
       "   confirmed        confirmed.tested.ratio tested.population.ratio\n",
       " Min.   :       0   Min.   : 0.00          Min.   :   0.0065      \n",
       " 1st Qu.:   37636   1st Qu.: 5.00          1st Qu.:   9.4000      \n",
       " Median :  281196   Median :10.05          Median :  46.9500      \n",
       " Mean   : 2433263   Mean   :11.15          Mean   : 170.2688      \n",
       " 3rd Qu.: 1220971   3rd Qu.:15.32          3rd Qu.: 150.0000      \n",
       " Max.   :90749469   Max.   :42.80          Max.   :3044.0000      \n",
       "                                                                  \n",
       " confirmed.population.ratio\n",
       " Min.   : 0.000            \n",
       " 1st Qu.: 0.425            \n",
       " Median : 6.050            \n",
       " Mean   :11.953            \n",
       " 3rd Qu.:15.600            \n",
       " Max.   :66.800            \n",
       "                           "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Print the summary of the processed data frame again\n",
    "summary(new_covid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After pre-processing, you can see the columns and columns names are simplified, and columns types are converted into correct types.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The data frame has following columns:\n",
    "\n",
    "*   **country** - The name of the country\n",
    "*   **date** - Reported date\n",
    "*   **tested** - Total tested cases by the reported date\n",
    "*   **confirmed** - Total confirmed cases by the reported date\n",
    "*   **confirmed.tested.ratio** - The ratio of confirmed cases to the tested cases\n",
    "*   **tested.population.ratio** - The ratio of tested cases to the population of the country\n",
    "*   **confirmed.population.ratio** - The ratio of confirmed cases to the population of the country\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "OK, we can call `write.csv()` function to save the csv file into a file.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\"\",\"country\",\"date\",\"tested\",\"confirmed\",\"confirmed.tested.ratio\",\"tested.population.ratio\",\"confirmed.population.ratio\"\n",
      "\"1\",\"Afghanistan\",\"17 Dec 2020\",154767,49621,32.1,0.4,0.13\n",
      "\"2\",\"Albania\",\"18 Feb 2021\",428654,96838,22.6,15,3.4\n",
      "\"3\",\"Algeria\",\"2 Nov 2020\",230553,58574,25.4,0.53,0.13\n",
      "\"4\",\"Andorra\",\"23 Feb 2022\",300307,37958,12.6,387,49\n",
      "\"5\",\"Angola\",\"2 Feb 2021\",399228,20981,5.3,1.3,0.067\n",
      "\"6\",\"Antigua and Barbuda\",\"6 Mar 2021\",15268,832,5.4,15.9,0.86\n",
      "\"7\",\"Argentina\",\"16 Apr 2022\",35716069,9060495,25.4,78.3,20\n",
      "\"8\",\"Armenia\",\"29 May 2022\",3099602,422963,13.6,105,14.3\n",
      "\"9\",\"Australia\",\"1 Sep 2022\",78280841,10053456,12.8,312,4.2\n",
      "\"10\",\"Austria\",\"2 Sep 2022\",195567915,4970195,2.5,2197,55.8\n",
      "\"11\",\"Azerbaijan\",\"11 May 2022\",6838458,792638,11.6,69.1,8\n",
      "\"12\",\"Bahamas\",\"28 Jul 2022\",246932,36670,14.9,64,9.5\n",
      "\"13\",\"Bahrain\",\"29 Aug 2022\",10271644,671252,6.5,654,42.8\n",
      "\"14\",\"Bangladesh\",\"24 Jul 2021\",7417714,1151644,15.5,4.5,0.7\n",
      "\"15\",\"Barbados\",\"29 Aug 2022\",754506,100973,13.4,263,35.2\n",
      "\"16\",\"Belarus\",\"9 May 2022\",13217569,982809,7.4,139,10.4\n",
      "\"17\",\"Belgium\",\"29 Aug 2022\",35286170,4482315,12.7,306,38.9\n",
      "\"18\",\"Belize\",\"8 Jun 2022\",572900,60694,10.6,140,14.9\n",
      "\"19\",\"Benin\",\"4 May 2021\",595112,7884,1.3,5.1,0.067\n",
      "\"20\",\"Bhutan\",\"28 Feb 2022\",1736168,12702,0.73,234,1.71\n",
      "\"21\",\"Bolivia\",\"5 Jun 2022\",4358669,910228,20.9,38.1,8\n",
      "\"22\",\"Bosnia and Herzegovina\",\"1 Sep 2022\",1844604,395994,21.5,53.9,11.6\n",
      "\"23\",\"Botswana\",\"11 Jan 2022\",2026898,232432,11.5,89.9,10.3\n",
      "\"24\",\"Brazil\",\"19 Feb 2021\",23561497,10081676,42.8,11.2,4.8\n",
      "\"25\",\"Brunei\",\"2 Aug 2021\",153804,338,0.22,33.5,0.074\n",
      "\"26\",\"Bulgaria\",\"31 Aug 2022\",10435728,1242910,11.9,150,17.9\n",
      "\"27\",\"Burkina Faso\",\"4 Mar 2021\",158777,12123,7.6,0.76,0.058\n",
      "\"28\",\"Burundi\",\"5 Jan 2021\",90019,884,0.98,0.76,0.0074\n",
      "\"29\",\"Cambodia\",\"1 Aug 2021\",1812706,77914,4.3,11.2,0.48\n",
      "\"30\",\"Cameroon\",\"18 Feb 2021\",942685,32681,3.5,3.6,0.12\n",
      "\"31\",\"Canada\",\"20 Aug 2022\",64259009,4158491,6.5,170,11\n",
      "\"32\",\"Chad\",\"2 Mar 2021\",99027,4020,4.1,0.72,0.029\n",
      "\"33\",\"Chile\",\"30 Aug 2022\",43971385,4508422,10.3,231,23.6\n",
      "\"34\",\"China[c]\",\"31 Jul 2020\",1.6e+08,87655,0.055,11.1,0.0061\n",
      "\"35\",\"Colombia\",\"25 Aug 2022\",36279188,6299595,17.4,75.2,13.1\n",
      "\"36\",\"Costa Rica\",\"2 Nov 2021\",2575363,561054,21.8,51.5,11.2\n",
      "\"37\",\"Croatia\",\"30 Aug 2022\",5139204,1213658,23.6,126,29.8\n",
      "\"38\",\"Cuba\",\"30 Aug 2022\",14097790,1110539,7.9,124,9.8\n",
      "\"39\",\"Cyprus[d]\",\"21 Aug 2022\",26281375,576278,2.2,3044,66.8\n",
      "\"40\",\"Czechia\",\"30 Aug 2022\",22163225,4040773,18.2,207,37.8\n",
      "\"41\",\"Denmark[e]\",\"2 Sep 2022\",66755028,3274583,4.9,1146,56.2\n",
      "\"42\",\"Djibouti\",\"28 Apr 2022\",305941,15631,5.1,33.2,1.7\n",
      "\"43\",\"Dominica\",\"20 Jun 2022\",209803,14821,7.1,293,20.7\n",
      "\"44\",\"Dominican Republic\",\"22 Jul 2022\",3574665,626030,17.5,32.9,5.8\n",
      "\"45\",\"DR Congo\",\"28 Feb 2021\",124838,25961,20.8,0.14,0.029\n",
      "\"46\",\"Ecuador\",\"23 Jul 2021\",1627189,480720,29.5,9.5,2.8\n",
      "\"47\",\"Egypt\",\"23 Jul 2021\",3137519,283947,9.1,3.1,0.28\n",
      "\"48\",\"El Salvador\",\"18 Mar 2022\",1847861,161052,8.7,28.5,2.5\n",
      "\"49\",\"Equatorial Guinea\",\"31 Aug 2022\",375022,16860,4.5,28.7,1.3\n",
      "\"50\",\"Estonia\",\"29 Aug 2022\",3486520,597954,17.2,262,45\n",
      "\"51\",\"Eswatini\",\"8 Dec 2021\",415110,49253,11.9,36.5,4.3\n",
      "\"52\",\"Ethiopia\",\"24 Jun 2021\",2981185,278446,9.3,2.6,0.24\n",
      "\"53\",\"Faroe Islands\",\"27 Feb 2022\",774000,34237,4.4,1493,65.7\n",
      "\"54\",\"Fiji\",\"1 Sep 2022\",652851,68177,10.4,72.8,7.6\n",
      "\"55\",\"Finland\",\"14 Jan 2022\",9042453,371135,4.1,163,6.7\n",
      "\"56\",\"France[f][g]\",\"15 May 2022\",272417258,29183646,10.7,417,44.7\n",
      "\"57\",\"Gabon\",\"23 Jul 2021\",958807,25325,2.6,3.1,0.082\n",
      "\"58\",\"Gambia\",\"15 Feb 2021\",43217,4469,10.3,2,0.21\n",
      "\"59\",\"Georgia[h]\",\"3 Nov 2021\",4888787,732965,15,132,19.7\n",
      "\"60\",\"Germany\",\"7 Jul 2021\",65247345,3733519,5.7,77.8,4.5\n",
      "\"61\",\"Ghana\",\"3 Jul 2021\",1305749,96708,7.4,4.2,0.31\n",
      "\"62\",\"Greece\",\"28 Aug 2022\",91707649,4762827,5.2,852,44.2\n",
      "\"63\",\"Greenland\",\"30 Jan 2022\",164573,10662,6.5,293,19\n",
      "\"64\",\"Grenada\",\"11 May 2021\",28684,161,0.56,25.7,0.14\n",
      "\"65\",\"Guatemala\",\"4 Aug 2022\",5390704,1054127,19.6,31.2,6.1\n",
      "\"66\",\"Guinea\",\"21 Jul 2021\",494898,24878,5,3.8,0.19\n",
      "\"67\",\"Guinea-Bissau\",\"7 Jul 2022\",145231,8400,5.8,7.7,0.45\n",
      "\"68\",\"Guyana\",\"15 Jun 2022\",648569,66129,10.2,82.5,8.4\n",
      "\"69\",\"Haiti\",\"24 Aug 2022\",218877,33381,15.3,1.9,0.29\n",
      "\"70\",\"Honduras\",\"26 Nov 2021\",1133782,377859,33.3,11.8,3.9\n",
      "\"71\",\"Hungary\",\"10 May 2022\",11394556,1909948,16.8,118,19.8\n",
      "\"72\",\"Iceland\",\"9 Aug 2022\",1988652,203162,10.2,546,55.8\n",
      "\"73\",\"India\",\"8 Jul 2022\",866177937,43585554,5,63,31.7\n",
      "\"74\",\"Indonesia\",\"1 Sep 2022\",69918530,6362902,9.1,25.9,2.4\n",
      "\"75\",\"Iran\",\"31 May 2022\",52269202,7232268,13.8,62.8,8.7\n",
      "\"76\",\"Iraq\",\"3 Aug 2022\",19090652,2448484,12.8,47.5,6.1\n",
      "\"77\",\"Ireland\",\"31 Aug 2022\",12636194,1656956,13.1,257,33.7\n",
      "\"78\",\"Israel\",\"17 Jan 2022\",41373364,1792137,4.3,451,19.5\n",
      "\"79\",\"Italy\",\"2 Sep 2022\",242732811,21907413,9,402,36.3\n",
      "\"80\",\"Ivory Coast\",\"3 Mar 2021\",429177,33285,7.8,1.6,0.13\n",
      "\"81\",\"Jamaica\",\"31 Aug 2022\",1170124,149911,12.8,42.9,5.5\n",
      "\"82\",\"Japan\",\"1 Mar 2021\",8487288,432773,5.1,6.7,0.34\n",
      "\"83\",\"Jordan\",\"6 Jun 2021\",7407053,739847,10,69.5,6.9\n",
      "\"84\",\"Kazakhstan\",\"28 May 2021\",11575012,385144,3.3,62.1,2.1\n",
      "\"85\",\"Kenya\",\"5 Mar 2021\",1322806,107729,8.1,2.8,0.23\n",
      "\"86\",\"Kosovo\",\"31 May 2021\",611357,107410,17.6,33.8,5.9\n",
      "\"87\",\"Kuwait\",\"9 Mar 2022\",7754247,624573,8.1,181,14.6\n",
      "\"88\",\"Kyrgyzstan\",\"10 Feb 2021\",695415,85253,12.3,10.7,1.3\n",
      "\"89\",\"Laos\",\"1 Mar 2021\",114030,45,0.039,1.6,0.00063\n",
      "\"90\",\"Latvia\",\"5 Sep 2021\",3630095,144518,4,189,7.5\n",
      "\"91\",\"Lebanon\",\"14 Jun 2021\",4599186,542649,11.8,67.4,8\n",
      "\"92\",\"Lesotho\",\"30 Mar 2022\",431221,32910,7.6,21.5,1.6\n",
      "\"93\",\"Liberia\",\"17 Jul 2021\",128246,5396,4.2,2.5,0.11\n",
      "\"94\",\"Libya\",\"14 Apr 2022\",2578215,501862,19.5,37.6,7.3\n",
      "\"95\",\"Lithuania\",\"29 Aug 2022\",8825304,1110352,12.6,316,39.7\n",
      "\"96\",\"Luxembourg[i]\",\"12 May 2022\",4248188,244182,5.7,679,39\n",
      "\"97\",\"Madagascar\",\"19 Feb 2021\",119608,19831,16.6,0.46,0.076\n",
      "\"98\",\"Malawi\",\"1 Sep 2022\",610704,87877,14.4,3.2,0.46\n",
      "\"99\",\"Malaysia\",\"7 Sep 2021\",23705425,1880734,7.9,72.3,5.7\n",
      "\"100\",\"Maldives\",\"13 Mar 2022\",2216560,174658,7.9,398,31.3\n",
      "\"101\",\"Mali\",\"7 Jul 2021\",322504,14449,4.5,1.6,0.071\n",
      "\"102\",\"Malta\",\"8 Sep 2021\",1211456,36606,3,245,7.4\n",
      "\"103\",\"Mauritania\",\"16 Apr 2021\",268093,18103,6.8,6.1,0.41\n",
      "\"104\",\"Mauritius\",\"22 Nov 2020\",289552,494,0.17,22.9,0.039\n",
      "\"105\",\"Mexico\",\"15 Oct 2021\",10503678,3749860,35.7,8.2,2.9\n",
      "\"106\",\"Moldova[j]\",\"20 Apr 2022\",3213594,516864,16.1,122,19.6\n",
      "\"107\",\"Mongolia\",\"10 Jul 2021\",3354200,136053,4.1,100,4.1\n",
      "\"108\",\"Montenegro\",\"10 May 2021\",394388,98449,25,62.5,15.6\n",
      "\"109\",\"Morocco\",\"1 Sep 2022\",13723991,1264468,9.2,37.2,3.4\n",
      "\"110\",\"Mozambique\",\"22 Jul 2021\",688570,105866,15.4,2.2,0.34\n",
      "\"111\",\"Myanmar\",\"16 Sep 2021\",4047680,440741,10.9,7.4,0.81\n",
      "\"112\",\"Namibia\",\"4 Jul 2022\",1062663,166229,15.6,38.7,6.1\n",
      "\"113\",\"Nepal\",\"26 Jul 2022\",5804358,984475,17,20.7,3.5\n",
      "\"114\",\"Netherlands\",\"6 Jul 2021\",14526293,1692834,11.7,83.4,9.7\n",
      "\"115\",\"New Caledonia\",\"3 Sep 2021\",41962,136,0.32,15.7,0.05\n",
      "\"116\",\"New Zealand\",\"31 Aug 2022\",7486691,1726820,23.1,150,34.7\n",
      "\"117\",\"Niger\",\"22 Feb 2021\",79321,4740,6,0.35,0.021\n",
      "\"118\",\"Nigeria\",\"28 Feb 2021\",1544008,155657,10.1,0.75,0.076\n",
      "\"119\",\"North Korea\",\"25 Nov 2020\",16914,0,0,0.066,0\n",
      "\"120\",\"North Macedonia\",\"1 Jul 2021\",881870,155689,17.7,42.5,7.5\n",
      "\"121\",\"Northern Cyprus[k]\",\"12 Jul 2022\",7096998,103034,1.5,2177,31.6\n",
      "\"122\",\"Norway\",\"20 Jan 2022\",9811888,554778,5.7,183,10.3\n",
      "\"123\",\"Oman\",\"28 Oct 2020\",509959,114434,22.4,11,2.5\n",
      "\"124\",\"Pakistan\",\"5 Mar 2021\",9173593,588728,6.4,4.2,0.27\n",
      "\"125\",\"Palestine\",\"5 Feb 2022\",3078533,574105,18.6,60.9,11.4\n",
      "\"126\",\"Panama\",\"27 Aug 2022\",6940020,978181,14.1,166,23.4\n",
      "\"127\",\"Papua New Guinea\",\"17 Feb 2021\",47490,961,2,0.53,0.011\n",
      "\"128\",\"Paraguay\",\"27 Mar 2022\",2609819,647950,24.8,36.6,9.1\n",
      "\"129\",\"Peru\",\"21 Aug 2022\",34036166,4075910,12,103.7,12.4\n",
      "\"130\",\"Philippines\",\"1 Sep 2022\",32252244,3883957,12,31.9,3.8\n",
      "\"131\",\"Poland\",\"27 Apr 2022\",36064311,5993861,16.6,94,15.6\n",
      "\"132\",\"Portugal\",\"5 Jan 2022\",27515490,1499976,5.5,268,14.6\n",
      "\"133\",\"Qatar\",\"31 Aug 2022\",3866366,429396,11.1,134,14.9\n",
      "\"134\",\"Romania\",\"29 Jan 2021\",5405393,724250,13.4,27.9,3.7\n",
      "\"135\",\"Russia\",\"6 Jun 2022\",295542733,18358459,6.2,201,12.5\n",
      "\"136\",\"Rwanda\",\"6 Oct 2021\",2885812,98209,3.4,22.3,0.76\n",
      "\"137\",\"Saint Kitts and Nevis\",\"26 Aug 2021\",30231,995,3.3,57.6,1.9\n",
      "\"138\",\"Saint Lucia\",\"30 Aug 2022\",208278,28775,13.8,114.5,15.8\n",
      "\"139\",\"Saint Vincent\",\"31 Aug 2022\",111619,9430,8.4,101.3,8.6\n",
      "\"140\",\"San Marino\",\"21 Aug 2022\",170861,20241,11.8,499,59.1\n",
      "\"141\",\"Saudi Arabia\",\"26 Apr 2022\",41849069,753632,1.8,120,2.2\n",
      "\"142\",\"Senegal\",\"12 Jul 2021\",624502,46509,7.4,3.9,0.29\n",
      "\"143\",\"Serbia\",\"30 Aug 2022\",10677222,2283195,21.4,153,32.8\n",
      "\"144\",\"Singapore\",\"3 Aug 2021\",16206203,65315,0.4,284,1.1\n",
      "\"145\",\"Slovakia\",\"30 Aug 2022\",7268067,1834215,25.2,133,33.6\n",
      "\"146\",\"Slovenia\",\"31 Aug 2022\",2722910,1128277,41.4,130,53.9\n",
      "\"147\",\"South Africa\",\"24 May 2021\",11378282,1637848,14.4,19.2,2.8\n",
      "\"148\",\"South Korea\",\"1 Mar 2021\",6592010,90029,1.4,12.7,0.17\n",
      "\"149\",\"South Sudan\",\"26 May 2021\",164472,10688,6.5,1.3,0.084\n",
      "\"150\",\"Spain\",\"1 Jul 2021\",54128524,3821305,7.1,116,8.2\n",
      "\"151\",\"Sri Lanka\",\"30 Mar 2021\",2384745,93128,3.9,10.9,0.43\n",
      "\"152\",\"Sudan\",\"7 Jan 2021\",158804,23316,14.7,0.36,0.053\n",
      "\"153\",\"Sweden\",\"24 May 2021\",9996795,1074751,10.8,96.8,10.4\n",
      "\"154\",\"Switzerland[l]\",\"29 Aug 2022\",22591703,4045006,17.9,262,47\n",
      "\"155\",\"Taiwan[m]\",\"31 Aug 2022\",24379957,5342106,21.91,103.3,22.632\n",
      "\"156\",\"Tanzania\",\"18 Nov 2020\",3880,509,13.1,0.0065,0.00085\n",
      "\"157\",\"Thailand\",\"4 Mar 2021\",1579597,26162,1.7,2.3,0.038\n",
      "\"158\",\"Togo\",\"1 Sep 2022\",785873,38517,4.9,9.1,0.45\n",
      "\"159\",\"Trinidad and Tobago\",\"3 Jan 2022\",512730,92997,18.1,37.6,6.8\n",
      "\"160\",\"Tunisia\",\"23 Aug 2021\",2893625,703732,24.3,24.5,6\n",
      "\"161\",\"Turkey\",\"2 Jul 2021\",61236294,5435831,8.9,73.6,6.5\n",
      "\"162\",\"Uganda\",\"11 Feb 2021\",852444,39979,4.7,1.9,0.087\n",
      "\"163\",\"Ukraine\",\"24 Nov 2021\",15648456,3367461,21.5,37.2,8\n",
      "\"164\",\"United Arab Emirates\",\"29 Aug 2022\",183625660,1014387,0.55,1913,10.6\n",
      "\"165\",\"United Kingdom\",\"19 May 2022\",522526476,22232377,4.3,774,32.9\n",
      "\"166\",\"United States\",\"29 Jul 2022\",929349291,90749469,9.8,281,27.4\n",
      "\"167\",\"Uruguay\",\"16 Apr 2022\",6089116,895592,14.7,175,25.8\n",
      "\"168\",\"Uzbekistan\",\"7 Sep 2020\",2630000,43975,1.7,7.7,0.13\n",
      "\"169\",\"Venezuela\",\"30 Mar 2021\",3179074,159149,5,11,0.55\n",
      "\"170\",\"Vietnam\",\"28 Aug 2022\",45772571,11403302,24.9,46.4,11.6\n",
      "\"171\",\"Zambia\",\"10 Mar 2022\",3301860,314850,9.5,19,1.8\n",
      "\"172\",\"Zimbabwe\",\"1 Sep 2022\",2483798,256744,10.3,16.7,1.7\n"
     ]
    }
   ],
   "source": [
    "# Export the data frame to a csv file\n",
    "write.csv(new_covid)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note for IBM Waston Studio, there is no traditional \"hard disk\" associated with a R workspace.\n",
    "\n",
    "Even if you call `write.csv()` method to save the data frame as a csv file, it won't be shown in IBM Cloud Object Storage asset UI automatically.\n",
    "\n",
    "However, you may still check if the `covid.csv` exists using following code snippet:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1] \"/resources/v2/M5_Final/covid.csv\"\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "TRUE"
      ],
      "text/latex": [
       "TRUE"
      ],
      "text/markdown": [
       "TRUE"
      ],
      "text/plain": [
       "[1] TRUE"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Get working directory\n",
    "wd <- getwd()\n",
    "# Get exported \n",
    "file_path <- paste(wd, sep=\"\", \"/covid.csv\")\n",
    "# File path\n",
    "print(file_path)\n",
    "file.exists(file_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Optional Step**: If you have difficulties finishing above webscraping tasks, you may still continue with next tasks by downloading a provided csv file from here:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Download a sample csv file\n",
    "# covid_csv_file <- download.file(\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-RP0101EN-Coursera/v2/dataset/covid.csv\", destfile=\"covid.csv\")\n",
    "# covid_data_frame_csv <- read.csv(\"covid.csv\", header=TRUE, sep=\",\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 4: Get a subset of the extracted data frame\n",
    "\n",
    "The goal of task 4 is to get the 5th to 10th rows from the data frame with only `country` and `confirmed` columns selected\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table>\n",
       "<caption>A data.frame: 2 × 2</caption>\n",
       "<thead>\n",
       "\t<tr><th></th><th scope=col>country</th><th scope=col>confirmed</th></tr>\n",
       "\t<tr><th></th><th scope=col>&lt;fct&gt;</th><th scope=col>&lt;int&gt;</th></tr>\n",
       "</thead>\n",
       "<tbody>\n",
       "\t<tr><th scope=row>5</th><td>Angola </td><td> 20981</td></tr>\n",
       "\t<tr><th scope=row>10</th><td>Austria</td><td>488007</td></tr>\n",
       "</tbody>\n",
       "</table>\n"
      ],
      "text/latex": [
       "A data.frame: 2 × 2\n",
       "\\begin{tabular}{r|ll}\n",
       "  & country & confirmed\\\\\n",
       "  & <fct> & <int>\\\\\n",
       "\\hline\n",
       "\t5 & Angola  &  20981\\\\\n",
       "\t10 & Austria & 488007\\\\\n",
       "\\end{tabular}\n"
      ],
      "text/markdown": [
       "\n",
       "A data.frame: 2 × 2\n",
       "\n",
       "| <!--/--> | country &lt;fct&gt; | confirmed &lt;int&gt; |\n",
       "|---|---|---|\n",
       "| 5 | Angola  |  20981 |\n",
       "| 10 | Austria | 488007 |\n",
       "\n"
      ],
      "text/plain": [
       "   country confirmed\n",
       "5  Angola   20981   \n",
       "10 Austria 488007   "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Read covid_data_frame_csv from the csv file\n",
    "covid_csv_file <- download.file(\"https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-RP0101EN-Coursera/v2/dataset/covid.csv\", destfile=\"covid.csv\")\n",
    "covid_data_frame_csv <- read.csv(\"covid.csv\", header=TRUE, sep=\",\")\n",
    "# Get the 5th to 10th rows, with two \"country\" \"confirmed\" columns\n",
    "covid_data_frame_csv[c(5,10),c(\"country\",\"confirmed\")]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "tags": []
   },
   "source": [
    "## TASK 5: Calculate worldwide COVID testing positive ratio\n",
    "\n",
    "The goal of task 5 is to get the total confirmed and tested cases worldwide, and try to figure the overall positive ratio using `confirmed cases / tested cases`\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get the total confirmed cases worldwide\n",
    "\n",
    "# Get the total tested cases worldwide\n",
    "\n",
    "# Get the positive ratio (confirmed / tested)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 6: Get a country list which reported their testing data\n",
    "\n",
    "The goal of task 6 is to get a catalog or sorted list of countries who have reported their COVID-19 testing data\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get the `country` column\n",
    "\n",
    "# Check its class (should be Factor)\n",
    "\n",
    "# Conver the country column into character so that you can easily sort them\n",
    "\n",
    "# Sort the countries AtoZ\n",
    "\n",
    "# Sort the countries ZtoA\n",
    "\n",
    "# Print the sorted ZtoA list\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 7: Identify countries names with a specific pattern\n",
    "\n",
    "The goal of task 7 is using a regular expression to find any countires start with `United`\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use a regular expression `United.+` to find matches\n",
    "\n",
    "# Print the matched country names\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 8: Pick two countries you are interested, and then review their testing data\n",
    "\n",
    "The goal of task 8 is to compare the COVID-19 test data between two countires, you will need to select two rows from the dataframe, and select `country`, `confirmed`, `confirmed-population-ratio` columns\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Select a subset (should be only one row) of data frame based on a selected country name and columns\n",
    "\n",
    "\n",
    "# Select a subset (should be only one row) of data frame based on a selected country name and columns\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 9: Compare which one of the selected countries has a larger ratio of confirmed cases to population\n",
    "\n",
    "The goal of task 9 is to find out which country you have selected before has larger ratio of confirmed cases to population, which may indicate that country has higher COVID-19 infection risk\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Use if-else statement\n",
    "# if (check which confirmed.population value is greater) {\n",
    "#    print()\n",
    "# } else {\n",
    "#    print()\n",
    "# }\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## TASK 10: Find countries with confirmed to population ratio rate less than a threshold\n",
    "\n",
    "The goal of task 10 is to find out which countries have the confirmed to population ratio less than 1%, it may indicate the risk of those countries are relatively low\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Get a subset of any countries with `confirmed.population.ratio` less than the threshold\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "R",
   "language": "R",
   "name": "conda-env-r-r"
  },
  "language_info": {
   "codemirror_mode": "r",
   "file_extension": ".r",
   "mimetype": "text/x-r-source",
   "name": "R",
   "pygments_lexer": "r",
   "version": "3.5.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
